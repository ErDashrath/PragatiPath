# Generated by Django 5.2.6 on 2025-09-24 18:56

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdaptiveQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('numerical', 'Numerical'), ('matching', 'Matching')], max_length=20)),
                ('correct_answer', models.TextField()),
                ('options', models.JSONField(blank=True, default=list)),
                ('difficulty', models.FloatField(default=0.0, help_text='IRT difficulty parameter (-3 to 3)')),
                ('discrimination', models.FloatField(default=1.0, help_text='IRT discrimination parameter (>0)')),
                ('guessing', models.FloatField(default=0.0, help_text='IRT guessing parameter (0-1)')),
                ('skill_id', models.CharField(help_text='Knowledge component/skill identifier', max_length=100)),
                ('fundamental_type', models.CharField(choices=[('listening', 'Listening'), ('grasping', 'Grasping'), ('retention', 'Retention'), ('application', 'Application')], max_length=20)),
                ('topic', models.CharField(blank=True, max_length=200)),
                ('subtopic', models.CharField(blank=True, max_length=200)),
                ('bloom_taxonomy_level', models.CharField(blank=True, max_length=50)),
                ('estimated_time_seconds', models.IntegerField(default=60)),
                ('times_attempted', models.IntegerField(default=0)),
                ('times_correct', models.IntegerField(default=0)),
                ('average_response_time', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Adaptive Question',
                'verbose_name_plural': 'Adaptive Questions',
                'db_table': 'adaptive_questions',
                'indexes': [models.Index(fields=['skill_id'], name='adaptive_qu_skill_i_6957bf_idx'), models.Index(fields=['fundamental_type'], name='adaptive_qu_fundame_bae8c8_idx'), models.Index(fields=['difficulty'], name='adaptive_qu_difficu_c58c0a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_correct', models.BooleanField()),
                ('student_answer', models.TextField()),
                ('response_time', models.FloatField(help_text='Response time in seconds')),
                ('hints_used', models.IntegerField(default=0)),
                ('confidence_level', models.IntegerField(blank=True, choices=[(1, 'Very Low'), (2, 'Low'), (3, 'Medium'), (4, 'High'), (5, 'Very High')], null=True)),
                ('session_id', models.UUIDField(help_text='Study session identifier')),
                ('attempt_number', models.IntegerField(default=1, help_text='Attempt number for this question')),
                ('previous_questions', models.JSONField(blank=True, default=list, help_text='Previous questions in session')),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='assessment.adaptivequestion')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Interaction',
                'verbose_name_plural': 'Interactions',
                'db_table': 'interactions',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['student', 'timestamp'], name='interaction_student_d63984_idx'), models.Index(fields=['question', 'timestamp'], name='interaction_questio_5d8a8b_idx'), models.Index(fields=['session_id'], name='interaction_session_5d1df1_idx'), models.Index(fields=['is_correct', 'timestamp'], name='interaction_is_corr_bad00c_idx')],
            },
        ),
    ]
